package org.assistments.direct.teacher;

import java.io.IOException;
import java.security.GeneralSecurityException;
import java.util.Arrays;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.google.api.client.googleapis.auth.oauth2.GoogleIdToken;
import com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier;
import com.google.api.client.googleapis.auth.oauth2.GoogleIdToken.Payload;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.http.javanet.NetHttpTransport;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;

/**
 * Servlet implementation class UploadStudentListWithGoogle
 */
@WebServlet("/UploadStudentListWithGoogle")
public class UploadStudentListWithGoogle extends HttpServlet {
	private static final long serialVersionUID = 1L;
	static final String CLIENT_ID = "868469417184-ava3g9j9t1c5q4ntif5qgr36v0m2pis4.apps.googleusercontent.com";
	static final String APPS_DOMAIN_NAME = "http://hmd12-2.cs.wpi.edu:8080";
	static final List<String> SCOPES = Arrays.asList("email", "profile");
	static final String CLIENT_SECRET = "MZHG7lHHH36w3Fp4UXY70Xzt";

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public UploadStudentListWithGoogle() {
		super();
		// TODO Auto-generated constructor stub
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		doPost(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		String idTokenString = request.getParameter("idtoken");

		HttpTransport transport = new NetHttpTransport();
		JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();
		GoogleIdTokenVerifier verifier = new GoogleIdTokenVerifier.Builder(
				transport, jsonFactory).setAudience(Arrays.asList(CLIENT_ID))
				.build();
		GoogleIdToken idToken = null;
		try {
			idToken = verifier.verify(idTokenString);
		} catch (GeneralSecurityException e) {
			e.printStackTrace();
		}
		if(idToken != null){
			Payload payload = idToken.getPayload();
		}
	}

}
